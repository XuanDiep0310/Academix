services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: academix_sqlserver
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
      - ACCEPT_EULA=Y
    ports:
      - "${DB_PORT:-1433}:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - academix_network
    restart: unless-stopped
    # healthcheck without sqlcmd: check SQL Server log for ready message
    healthcheck:
      test: ["CMD-SHELL", "grep -q \"SQL Server is now ready for client connections\" /var/opt/mssql/log/errorlog || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: academix_backend
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=${DB_NAME};User Id=${DB_USER};Password=${SA_PASSWORD};TrustServerCertificate=true;
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    depends_on:
      - sqlserver
    networks:
      - academix_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: academix_frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    networks:
      - academix_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  adminer:
    image: adminer
    container_name: academix_adminer
    ports:
      - "8080:8080"
    depends_on:
      - sqlserver
    networks:
      - academix_network
    restart: unless-stopped

volumes:
  sql_data:

networks:
  academix_network:
    driver: bridge
